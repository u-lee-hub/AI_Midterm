# -*- coding: utf-8 -*-
"""ETL_MysqlToMysql.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JXXWlpfaGdPufacNRVVScyd1pzgjvS8c

# ETL (DB To DB)

### 라이브러리 선언하기
"""

# !pip freeze

# !pip show pandas
# !pip show pymysql
# !pip show sqlalchemy

# !pip install pymysql

# 패키지 불러오기
import pandas as pd
from sqlalchemy import create_engine, inspect

from datetime import datetime

"""### 1. MySQL DB에서 데이터 불러오기"""

# MySQL 데이터베이스 연결 정보 설정
user = 'root'
password = '1234'
host = '0.tcp.jp.ngrok.io'
port = '14493'
database = 'kopodb'

# SQLAlchemy 엔진 생성
# engine = create_engine(f'mysql+mysqlconnector://{user}:{password}@{host}:{port}/{database}')
myngine = create_engine(f'mysql+pymysql://{user}:{password}@{host}:{port}/{database}')

# 조회할 쿼리문
sqlSelect = """
SELECT A.customer_id, A.name, B.balance, C.loan_amount,
		(B.balance + C.loan_amount) AS total_amount
FROM fin_customer_info A
JOIN fin_account_info B ON B.customer_id = A.customer_id
JOIN fin_loan_info C ON C.customer_id = A.customer_id
ORDER BY A.customer_id;
"""

# # 데이터프레임으로 불러오기
# selloutData = pd.read_sql_query(sqlSelect, con=myngine)

"""### 2. MySQL에 데이터프레임 저장"""

# current_time = datetime.now()
# print(current_time)

# 데이터프레임을 MySQL 데이터베이스의 테이블에 저장
table_name = "customer_finance_summary"
try:
    # 데이터프레임으로 불러오기
    selloutData = pd.read_sql_query(sqlSelect, con=myngine)
    # 타임스탬프 컬럼 추가
    selloutData['create_dttm'] = datetime.now()
    selloutData.to_sql(name=table_name, con=myngine, if_exists='append', index=False)
    print(f"{table_name} DB 입력 성공")
except Exception as e:
    print(e)

"""### 3. MySQL 내 데이터 조회"""

# 테이블 목록 조회
# inspector = inspect(myngine)

# tables = inspector.get_table_names()
# tables

# 타겟 테이블 조회
# sqlSelectTarget = """
# SELECT *
# FROM customer_finance_summary
# """

# selloutTarget = pd.read_sql_query(sqlSelectTarget, con=myngine)
# selloutTarget.head()

